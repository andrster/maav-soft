#ifndef MSGCHANNELS_HPP
#define MSGCHANNELS_HPP

namespace maav
{
// clang-format off

// Camera driver messages
extern const char* const RGBD_FORWARD_CHANNEL;              ///< Forward camera rgbd channel
extern const char* const RGBD_DOWNWARD_CHANNEL;             ///< Downward camera rgbd channel
extern const char* const FORWARD_CAMERA_POINT_CLOUD_CHANNEL;  ///< Forward camera point cloud channel
extern const char* const DOWNWARD_CAMERA_POINT_CLOUD_CHANNEL; ///< Downward camera rgbd channel

// GNC messages
extern const char* const STATE_CHANNEL;                     ///< Kalman filter state estimate
extern const char* const IMU_CHANNEL;                       ///< IMU sensor readings
extern const char* const HEIGHT_LIDAR_CHANNEL;              ///< Height lidar distance measurements
extern const char* const PLANE_FIT_CHANNEL;                 ///< Plane fitting measurements
extern const char* const GLOBAL_UPDATE_CHANNEL;             ///< Pose measurement from SLAM
extern const char* const VISUAL_ODOMETRY_CHANNEL;           ///< Visual odometry measurement

// Sim perfect sensor channels
extern const char* const SIM_IMU_CHANNEL;                   ///< Simulated IMU sensor readings
extern const char* const SIM_HEIGHT_LIDAR_CHANNEL;          ///< Simulated height lidar distance measurements
extern const char* const SIM_PLANE_FIT_CHANNEL;             ///< Simulated plane fitting measurements
extern const char* const SIM_GLOBAL_UPDATE_CHANNEL;         ///< Simulated pose measurement from SLAM
extern const char* const SIM_VISUAL_ODOMETRY_CHANNEL;           ///< Visual odometry measurement

// Sim ground truth channels
extern const char* const GT_INERTIAL_CHANNEL;               ///< Inertial ground truth of vehicle
extern const char* const GT_IMU_CHANNEL;                    ///< IMU bias ground truth
extern const char* const GT_WORLD_CHANNEL;                  ///< World vector fields ground truth
extern const char* const GT_SLAMDRIFT_CHANNEL;              ///< Drift of slam sensor ground truth
extern const char* const GT_LIDARDRIFT_CHANNEL;             ///< Lidar bias ground truth

extern const char* const CTRL_PARAMS_CHANNEL;               ///< PID gains from GCS client to controller
extern const char* const MAP_CHANNEL;                       ///< Map generated by SLAM
extern const char* const PATH_CHANNEL;                      ///< Path output from guidance to controller
extern const char* const SLAM_RESET_CHANNEL;
extern const char* const SLAM_LOCALIZATION_MODE_CHANNEL;
extern const char* const GOAL_WAYPOINT_CHANNEL; 			///< Waypoint used by guidance >

// Planefitter messages
extern const char* const PLANE_FITTER_HEARTBEAT_CHANNEL;    ///< Heart beat for the plane fitter

extern const char* const VISUALIZER_CHANNEL;

// Miscellaneous channels
extern const char* const EMS_CHANNEL;                       ///< Tiva's emergency message from tanfan to system
extern const char* const PATH_PROGRESS_CHANNEL;             ///< The outer loop controller's progress through its path
extern const char* const NAV_RUNSTATE_CMD_CHANNEL;          ///< GCS mission state command to mission planner
extern const char* const NAV_RUNSTATE_STAT_CHANNEL;         ///< Mission planner heartbeat
extern const char* const IDLE_CHANNEL;                      ///< channel on which idle commands are broadcast
extern const char* const CONTROL_COMMANDS_CHANNEL;          ///< controll commands to controller
extern const char* const KILLSWITCH_CHANNEL;                ///< killswitch channel
extern const char* const LOCALIZATION_STATUS_CHANNEL;       ///< status of localization
extern const char* const PID_ERROR_CHANNEL;
extern const char* const ATTITUDE_TARGET_CHANNEL;           ///< current commanded attitude of pixhawk
extern const char* const CAMERA_POS_CHANNEL;           ///< current pos of tracking camera
extern const char* const OCCUPANCY_MAP_HEARTBEAT_CHANNEL;   ///< Heart beat for occupancy map
extern const char* const OCCUPANCY_MAP_CHANNEL;             ///< Map generated by octomap
extern const char* const STATE_FORWARD_HEARTBEAT_CHANNEL;
// clang-format on
}  // namespace maav

#endif
